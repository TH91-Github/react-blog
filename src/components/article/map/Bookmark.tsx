import { colors } from "assets/style/Variable";
import { SvgBookmark } from "assets/svg/map/MapSvg";
import { useCallback, useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { actionAlert, actionUserLogin, AppDispatch, RootState } from "store/store";
import { UserBookmarkType } from "types/baseType";
import { ListType } from "types/kakaoComon";
import { collectionDocUpdate } from "utils/firebase/common";

interface BookmarkType {
  bookmarkItem: ListType;
}
export default function Bookmark({ bookmarkItem }:BookmarkType) {
  const dispatch = useDispatch<AppDispatch>(); 
  const {loginState, user} = useSelector((state: RootState) => state.storeUserLogin);
  const [isBookMark, setIsBookMark] = useState(false);

  const handleBookmarkClick = useCallback(() => {
    const newData = user ? {...user} : null;
    if(loginState && newData){// Î°úÍ∑∏Ïù∏ Ïú†Î¨¥
      const duplication = newData.kakaoMapData?.some(item => item.id === bookmarkItem.id)
      const myBookmark : UserBookmarkType = { // Îì±Î°ùÌï† ÏúÑÏπò Ï†ïÎ≥¥
        id: bookmarkItem.id,
        title: bookmarkItem.place_name ?? 'Ïû•ÏÜå Ïù¥Î¶ÑÏù¥ ÏóÜÏñ¥Ïöîüò¢',
        desc: '',
        bookmark: bookmarkItem ? bookmarkItem :null
      }
      if(newData.kakaoMapData){ 
        if(duplication){ // ÏÇ≠Ï†ú
          newData.kakaoMapData = newData.kakaoMapData.filter(item => item.id !==bookmarkItem.id)
        }else{ // Ï∂îÍ∞Ä
          newData.kakaoMapData = [...newData.kakaoMapData, myBookmark]
        }
      }else{ // ‚ö†Ô∏è kakaoMapData Îç∞Ïù¥ÌÑ∞Í∞Ä ÏïÑÏòà ÏóÜÎäî Ï¥àÍ∏∞ Í≥ÑÏ†ï Ï†ÑÏö©.
        newData.kakaoMapData = [myBookmark]
      }

      dispatch(actionUserLogin({loginState, user: newData}));
      collectionDocUpdate('userData','users',newData.id, 'kakaoMapData', newData.kakaoMapData);
    }else{ // Î°úÍ∑∏Ïù∏ Ìï¥Ï£ºÏÑ∏Ïöî
      dispatch(actionAlert({titMessage:'Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï¥Ïöî.. üò•',isPopup:true}))
    }
  },[user, bookmarkItem, dispatch, loginState])

  useEffect(()=>{ // Ïú†Ï†Ä Ï¶êÍ≤®Ï∞æÍ∏∞Ïóê ÏûàÎäî Í≤ΩÏö∞ icon color Î≥ÄÍ≤Ω
    if(!user) return
    const isMyBookmark = user.kakaoMapData?.some(mapItem => mapItem.id === bookmarkItem.id && mapItem.title === bookmarkItem.place_name) ?? false
    setIsBookMark(isMyBookmark)
  },[user, bookmarkItem])

  return (
    <button
      title="Ï¶êÍ≤®Ï∞æÍ∏∞"
      className="bookmark-btn"
      onClick={handleBookmarkClick}>
      <span className="icon">
        <SvgBookmark $fillColor={isBookMark ? colors.green : colors.subTextColor}/> 
      </span>
      <span className="blind">Ï¶êÍ≤®Ï∞æÍ∏∞</span>
    </button>
  )
}

